<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="309px" preserveAspectRatio="none" style="width:601px;height:309px;" version="1.1" viewBox="0 0 601 309" width="601px" zoomAndPan="magnify"><defs><filter height="300%" id="fm9ugjaaxq0m7" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[384ca5efd7404dfd65476772df22927a]
class DAO--><rect fill="#FEFECE" filter="url(#fm9ugjaaxq0m7)" height="291.2891" id="DAO" style="stroke: #A80036; stroke-width: 1.5;" width="583" x="7" y="7"/><ellipse cx="281.75" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M277.6719,18.7656 L277.6719,16.6094 L285.0625,16.6094 L285.0625,18.7656 L282.5938,18.7656 L282.5938,26.8438 L285.0625,26.8438 L285.0625,29 L277.6719,29 L277.6719,26.8438 L280.1406,26.8438 L280.1406,18.7656 L277.6719,18.7656 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="25" x="302.25" y="27.1543">DAO</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8" x2="589" y1="39" y2="39"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8" x2="589" y1="47" y2="47"/><ellipse cx="18" cy="58" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="27" y="61.2104">addObject(object : Object) : void</text><ellipse cx="18" cy="70.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="27" y="74.0151">addFrameOnly(frame : Frame) : void</text><ellipse cx="18" cy="83.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="27" y="86.8198">deleteAllObjects() : void</text><ellipse cx="18" cy="96.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="27" y="99.6245">deleteAllFrames() : void</text><ellipse cx="18" cy="109.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="27" y="112.4292">deleteSpecificObject(name : String) : void</text><ellipse cx="18" cy="122.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="27" y="125.2339">deleteSpecificObject(idFrame : String, size : int, data : String, periodicity : int, idObject : int) : void</text><ellipse cx="18" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="27" y="138.0386">deleteAllFramesInObject(idObject : int) : void</text><ellipse cx="18" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="27" y="150.8433">getAllObjects() : List&lt;Object&gt;</text><ellipse cx="18" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="27" y="163.6479">getObjectById(idObject : int) : Object</text><ellipse cx="18" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="27" y="176.4526">getObjectByName(name : String) : Object</text><ellipse cx="18" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="27" y="189.2573">getFramesByIdFrame(idFrame : String) : List&lt;Frame&gt;</text><ellipse cx="18" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="27" y="202.062">getFramesBySize(size : int) : List&lt;Frame&gt;</text><ellipse cx="18" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="27" y="214.8667">getFramesByData(data : String) : List&lt;Frame&gt;</text><ellipse cx="18" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="27" y="227.6714">getFramesByPeriodicity(periodicity : String) : List&lt;Frame&gt;</text><ellipse cx="18" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="27" y="240.4761">getFramesByObjectId(int idObject) : List&lt;Frame&gt;</text><ellipse cx="18" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="27" y="253.2808">addFrame(frame : Frame, object : Object) : void</text><ellipse cx="18" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="27" y="266.0854">deleteAll() : void</text><ellipse cx="18" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="27" y="278.8901">removeFrame(frame : Object) : void</text><ellipse cx="18" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="27" y="291.6948">removeObject(object : Object) : void</text><!--MD5=[37539fd71ca3cd662e93dc93c3f66c9d]
@startuml

interface DAO
{
+ addObject(object : Object) : void
+ addFrameOnly(frame : Frame) : void
+ deleteAllObjects() : void
+ deleteAllFrames() : void
+ deleteSpecificObject(name : String) : void
+ deleteSpecificObject(idFrame : String, size : int, data : String, periodicity : int, idObject : int) : void
+ deleteAllFramesInObject(idObject : int) : void
+ getAllObjects() : List<Object>
+ getObjectById(idObject : int) : Object
+ getObjectByName(name : String) : Object
+ getFramesByIdFrame(idFrame : String) : List<Frame>
+ getFramesBySize(size : int) : List<Frame>
+ getFramesByData(data : String) : List<Frame>
+ getFramesByPeriodicity(periodicity : String) : List<Frame>
+ getFramesByObjectId(int idObject) : List<Frame>
+ addFrame(frame : Frame, object : Object) : void
+ deleteAll() : void
+ removeFrame(frame : Object) : void
+ removeObject(object : Object) : void
}

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.19+7-post-Ubuntu-0ubuntu122.04.1
Operating System: Linux
Default Encoding: UTF-8
Language: fr
Country: FR
--></g></svg>